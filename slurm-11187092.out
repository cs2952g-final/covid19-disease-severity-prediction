## SLURM PROLOG ###############################################################
##    Job ID : 11187092
##  Job Name : run_proj
##  Nodelist : node1610
##      CPUs : 1
##  Mem/Node : 51200 MB
## Directory : /oscar/scratch/hsnell/covid19-disease-severity-prediction
##   Job Started : Sun Apr 27 09:37:04 PM EDT 2025
###############################################################################
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1745804226.720907 1271789 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1745804226.725501 1271789 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1745804226.742445 1271789 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1745804226.742479 1271789 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1745804226.742481 1271789 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1745804226.742483 1271789 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
Traceback (most recent call last):
  File "/oscar/scratch/hsnell/covid19-disease-severity-prediction/cnn_hannah.py", line 351, in <module>
    main()
  File "/oscar/scratch/hsnell/covid19-disease-severity-prediction/cnn_hannah.py", line 337, in main
    train_acc = train(model, b_cell_final, b_cell_training_labels)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/oscar/scratch/hsnell/covid19-disease-severity-prediction/cnn_hannah.py", line 187, in train
    label_batch = tf.cast(label_batch, tf.float32)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/oscar/home/hsnell/venv/dl_in_genomics_finalproj/lib/python3.11/site-packages/tensorflow/python/util/traceback_utils.py", line 153, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/oscar/home/hsnell/venv/dl_in_genomics_finalproj/lib/python3.11/site-packages/keras/src/backend/common/keras_tensor.py", line 156, in __tf_tensor__
    raise ValueError(
ValueError: A KerasTensor cannot be used as input to a TensorFlow function. A KerasTensor is a symbolic placeholder for a shape and dtype, used when constructing Keras Functional models or Keras Functions. You can only use it as input to a Keras layer or a Keras operation (from the namespaces `keras.layers` and `keras.ops`). You are likely doing something like:

```
x = Input(...)
...
tf_fn(x)  # Invalid.
```

What you should do instead is wrap `tf_fn` in a layer:

```
class MyLayer(Layer):
    def call(self, x):
        return tf_fn(x)

x = MyLayer()(x)
```

